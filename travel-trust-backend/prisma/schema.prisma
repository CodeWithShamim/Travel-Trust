// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String         @id @default(uuid())
  username     String         @unique
  email        String         @unique
  password     String
  profileImage String
  contactNo    String
  role         ENUM_USER_ROLE @default(user)
  gender       String?
  age          Int?
  address      String?
  bannerImage  String?
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  bookings     Booking[]
  reviews      Review[]

  @@map("users")
}

model Service {
  id          String           @id @default(uuid())
  name        String
  description String
  price       Float
  image       String
  location    String
  category    SERVICE_CATEGORY @default(Any)
  status      SERVICE_STATUS   @default(available)

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  bookings  Booking[]
  reviews   Review[]

  @@map("services")
}

model Booking {
  id        String        @id @default(uuid())
  serviceId String
  userId    String
  date      String
  time      String
  types     String        @default("")
  ticket    String        @default("")
  status    BookingStatus @default(pending)

  user    User    @relation(fields: [userId], references: [id])
  service Service @relation(fields: [serviceId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("bookings")
}

model Review {
  id          String  @id @default(uuid())
  serviceId   String
  userId      String?
  name        String  @default("")
  email       String  @default("")
  reviewTitle String  @default("")
  ratings     Int[]
  comment     String

  user    User?   @relation(fields: [userId], references: [id])
  service Service @relation(fields: [serviceId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("reviews")
}

enum SERVICE_CATEGORY {
  Any
  Tours
  Flights
  Hotels
  Cruises
  Car_Rentals
  Travel_Insurance
  Visa_Services
  Adventure_Travel
  Honeymoon_Packages
  Group_Travel
  Custom_Packages
}

enum SERVICE_STATUS {
  available
  upcoming
  cancel
}

enum ENUM_USER_ROLE {
  user
  admin
  super_admin
}

enum BookingStatus {
  pending
  confirmed
  cancel
}
